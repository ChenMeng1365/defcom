#coding:utf-8
$LOAD_PATH << '.'
require 'brainfuck'

begin
  scripts = DATA.read.gsub("\n","").gsub(" ","").split("[+-]")
  bfp = BrainFuck.new
  inputs = scripts.size.times.map{|i|(0).chr}
  output = []

  scripts.each_with_index do|script,idx|
  bfp.run script,'input'=> [inputs[idx]],'outpath'=>nil,'tracepath'=>nil
    output << [inputs[idx], bfp.value, script]
  end

  File.write 'output.txt',output.map{|o|o.join("\t")}.join("\n")
end

begin
  # a-z: 97-122
  # A-Z: 65-90
  # 0-9: 48-57
  # {}: 123,125
  output = [154, 148, 159, 153, 133, 204, 206, 204, 202, 156, 205, 159, 199, 207, 208, 200, 202, 204, 157, 157, 158, 199, 207, 199, 154, 157, 201, 208, 208, 154, 199, 202, 203, 205, 155, 158, 200, 131, 107]
  flag = 'flag{'.split('').map{|c|c.ord}
  output = output[0..-2] # 程序最后一段固定输出k，和前38段不同，舍弃

  # 比较两个序列每一位的差值
  def cmpbit seq1,seq2
    diffput = []
    seq1.each_with_index do|v,i|
      diffput << seq1[i] -seq2[i]
    end
    return diffput
  end

  cmpseq = cmpbit output[0..4], flag
  p cmpseq # output和flag对位比较，没有规律

  # 比较一个序列某一位和下一位的差值（最后一位回到开头重新计算，值可忽略）
  def diff seq
    diffput = []
    seq.each_with_index do|v,i|
      n = i+1==seq.size ? 0 : i+1
      diffput << seq[i] - seq[n]
    end
    return diffput
  end

  diffseq = diff output
  diffres = diff flag
  p diffseq,diffres[0..-2] # output和flag各自对比下一位差值，有规律（仅到g{），在output输入基础上根据本位和下一位的差值，可以推算出下一位原来数值

  diffseq[4..-1].each do|d|
    next_guess = flag[-1] + d
    flag << next_guess
  end
  p flag.map{|c|c.chr}.join[0..-2]
end


__END__
,>>++ +++++ +++[< +++++ +++++ >-]<+ +[<-> -]<[+ -],>> +++++ +++++
[<+++ +++++ ++>-] <++++ ++++[ <->-] <[+-] ,>>++ +++++ ++[<+ +++++
++++> -]<++ +++++ [<->- ]<[+- ],>>+ +++++ ++++[ <++++ +++++ +>-]<
+++[< ->-]< [+-], >>+++ +++++ ++++[ <++++ +++++ +>-]< +++[< ->-]<
[+-], >>+++ ++[<+ +++++ ++++> -]<++ [<->- ]<[+- ],>>+ ++++[ <++++
+++++ +>-]< [<->- ]<[+- ],>>+ ++++[ <++++ +++++ +>-]< ++[<- >-]<[
+-],> >++++ +[<++ +++++ +++>- ]<+++ +[<-> -]<[+ -],>> +++++ +++++
[<+++ +++++ ++>-] <[<-> -]<[+ -],>> +++++ [<+++ +++++ ++>-] <+[<-
>-]<[ +-],> >++++ +++++ [<+++ +++++ ++>-] <++++ +++[< ->-]< [+-],
>>+++ ++[<+ +++++ ++++> -]<++ +++++ [<->- ]<[+- ],>>+ +++[< +++++
+++++ >-]<+ +++++ +++[< ->-]< [+-], >>+++ +[<++ +++++ +++>- ]<+++
+++++ [<->- ]<[+- ],>>+ ++++[ <++++ +++++ +>-]< +++++ +[<-> -]<[+
-],>> +++++ [<+++ +++++ ++>-] <++++ [<->- ]<[+- ],>>+ ++++[ <++++
+++++ +>-]< ++[<- >-]<[ +-],> >++++ +++++ [<+++ +++++ ++>-] <++++
+++++ [<->- ]<[+- ],>>+ +++++ +++[< +++++ +++++ >-]<+ +++++ +++[<
->-]< [+-], >>+++ +++++ +[<++ +++++ +++>- ]<+++ +++++ [<->- ]<[+-
],>>+ ++++[ <++++ +++++ +>-]< +++++ ++[<- >-]<[ +-],> >++++ [<+++
+++++ ++>-] <++++ +++++ [<->- ]<[+- ],>>+ ++++[ <++++ +++++ +>-]<
+++++ ++[<- >-]<[ +-],> >++++ +++++ +[<++ +++++ +++>- ]<++[ <->-]
<[+-] ,>>++ +++++ ++[<+ +++++ ++++> -]<++ +++++ ++[<- >-]<[ +-],>
>++++ +[<++ +++++ +++>- ]<+++ ++[<- >-]<[ +-],> >++++ [<+++ +++++
++>-] <++++ ++++[ <->-] <[+-] ,>>++ ++[<+ +++++ ++++> -]<++ +++++
+[<-> -]<[+ -],>> +++++ +++++ [<+++ +++++ ++>-] <++[< ->-]< [+-],
>>+++ ++[<+ +++++ ++++> -]<++ +++++ [<->- ]<[+- ],>>+ ++++[ <++++
+++++ +>-]< ++++[ <->-] <[+-] ,>>++ +++[< +++++ +++++ >-]<+ ++[<-
>-]<[ +-],> >++++ +[<++ +++++ +++>- ]<+[< ->-]< [+-], >>+++ +++++
++[<+ +++++ ++++> -]<+[ <->-] <[+-] ,>>++ +++++ ++[<+ +++++ ++++>
-]<++ +++++ +[<-> -]<[+ -],>> +++++ [<+++ +++++ ++>-] <++++ ++[<-
>-]<[ +-],> >++++ +++++ +++[< +++++ +++++ >-]<+ ++++[ <->-] <[+-]
>>>>> +++++ +++++ +[<++ +++++ +++>- ]<+.> >>>>+ +++++ ++++[ <++++
+++++ +>-]< +++++ ++.